{"version":3,"sources":["components/Todo/Nav/index.tsx","components/Todo/TodoList/index.tsx","components/Todo/CompletedList/index.tsx","components/Todo/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","onAdd","inputRef","useRef","onAddBtnClicked","useCallback","val","current","value","trim","length","todoItem","key","Date","now","content","completed","onKeyDown","e","keyCode","className","type","placeholder","ref","onClick","TodoList","onCompleted","reverse","activedList","slice","onChange","event","index","Number","currentTarget","dataset","map","item","i","checked","onActived","onDelete","completedList","onClear","Empty","todoListReducer","state","action","findIndex","target","indexs","itemToDel","push","newState","includes","Todo","useReducer","todoList","todoListDispatch","useState","setActivedList","setCompletedList","completedNum","setCompletedNum","useEffect","acti","filter","compNum","onCompletedChange","element","elementList","CompletedList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00cf90d6.chunk.js","sourcesContent":["import { FC, ReactElement, useCallback, useRef } from 'react';\r\nimport { ITodoItem } from '../typings';\r\nimport './index.css';\r\n\r\n\r\ninterface IProps {\r\n    onAdd: (todoItem: ITodoItem) => void;\r\n}\r\n\r\n\r\nconst Nav: FC<IProps> = ({\r\n    onAdd\r\n}): ReactElement => {\r\n\r\n    const navTitle = 'ToDo List';\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onAddBtnClicked = useCallback(() => {\r\n        const val: string = inputRef.current!.value.trim();\r\n        if (val.length) {\r\n            const todoItem: ITodoItem = {\r\n                key: Date.now(),\r\n                content: val,\r\n                completed: false\r\n            };\r\n            onAdd(todoItem);\r\n            inputRef.current!.value = '';\r\n        }\r\n    }, [onAdd]);\r\n\r\n    const onKeyDown = useCallback(e => {\r\n        if (e.keyCode === 13) {\r\n            onAddBtnClicked();\r\n        }\r\n    }, [onAddBtnClicked]);\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <span className=\"nav-title\">{navTitle}</span>\r\n            <input className=\"nav-input\" type=\"text\" placeholder=\"请输入内容...\" ref={inputRef} onKeyDown={onKeyDown} />\r\n            <button className=\"nav-add-btn\" onClick={onAddBtnClicked}></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;","import {FC, ReactElement, useCallback} from 'react';\r\nimport { ITodoItem } from '../typings';\r\nimport './index.css';\r\n\r\ninterface IProps {\r\n    onCompleted: (element: ITodoItem) => void;\r\n    reverse?: boolean;\r\n    activedList: ITodoItem[];\r\n}\r\n\r\nconst TodoList: FC<IProps> = ({\r\n    onCompleted,\r\n    reverse = false,\r\n    activedList\r\n}): ReactElement => {\r\n\r\n    if (reverse) activedList = activedList.slice().reverse();\r\n\r\n    const onChange = useCallback(event => {\r\n        const index: number = Number(event.currentTarget.dataset.index);\r\n        onCompleted(activedList[index]);\r\n    }, [onCompleted, activedList]);\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <div className=\"todo-title\">代办</div>\r\n            {activedList.map((item, i) => (\r\n                <li className=\"todo-item\" key={`item-${i}`} data-index={i} onClick={onChange}>\r\n                    <input type=\"checkbox\" checked={item.completed} onChange={() => {}} />\r\n                    <span className={`todo-item-text${item.completed ? ' completed' : ''}`}>{item.content}</span>\r\n                </li>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import {FC, ReactElement, useCallback} from 'react';\r\nimport { ITodoItem } from '../typings';\r\nimport '../TodoList/index.css';\r\n\r\ninterface IProps {\r\n    onActived: (element: ITodoItem) => void;\r\n    onDelete: (elementList: ITodoItem[]) => void;\r\n    completedList: ITodoItem[];\r\n}\r\n\r\nconst TodoList: FC<IProps> = ({\r\n    onActived,\r\n    onDelete,\r\n    completedList\r\n}): ReactElement => {\r\n\r\n    const onClear = useCallback(() => {\r\n        onDelete(completedList);\r\n    }, [onDelete, completedList]);\r\n\r\n    const onChange = useCallback(event => {\r\n        const index: number = Number(event.currentTarget.dataset.index);\r\n        onActived(completedList[index]);\r\n    }, [onActived, completedList]);\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <div className=\"todo-title\">\r\n                <span>已完成</span>\r\n                <button className=\"clear-btn\" onClick={onClear}>清空</button>\r\n            </div>\r\n            {completedList.map((item, i) => (\r\n                <li className=\"todo-item\" key={`item-${i}`} data-index={i} onClick={onChange}>\r\n                    <input type=\"checkbox\" checked={item.completed} onChange={() => {}} />\r\n                    <span className={`todo-item-text${item.completed ? ' completed' : ''}`}>{item.content}</span>\r\n                </li>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import { FC, ReactElement, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport './index.css';\r\nimport Nav from './Nav';\r\nimport TodoList from './TodoList';\r\nimport CompletedList from './CompletedList';\r\nimport { ITodoItem } from './typings';\r\n\r\n\r\nconst Empty: FC = (): ReactElement => {\r\n  return (\r\n    <div className=\"empty\">什么都没有(●'◡'●)</div>\r\n  );\r\n};\r\n\r\n\r\ntype TodoListAction = {\r\n  type: string\r\n  val: ITodoItem[]\r\n};\r\n\r\nconst todoListReducer = (state: ITodoItem[], action: TodoListAction): ITodoItem[] => {\r\n  if (action.type === 'add') {\r\n    return [...state, action.val[0]];\r\n  }\r\n  if (action.type === 'change') {\r\n    const index = state.findIndex(item => item === action.val[0]);\r\n    const target = { ...state[index] };\r\n    target.completed = !target.completed;\r\n    return [...state.slice(0, index), target, ...state.slice(index + 1)];\r\n  }\r\n  if (action.type === 'delete') {\r\n    const indexs = [];\r\n    for (const itemToDel of action.val) {\r\n      const index = state.findIndex(item => item === itemToDel);\r\n      indexs.push(index);\r\n    }\r\n    const newState: ITodoItem[] = [];\r\n    for (let i = 0; i < state.length; i++) {\r\n      if (indexs.includes(i)) continue;\r\n      newState.push(state[i]);\r\n    }\r\n    return newState;\r\n  }\r\n  return state;\r\n};\r\n\r\n\r\nconst Todo: FC = (): ReactElement => {\r\n\r\n  const [todoList, todoListDispatch] = useReducer(todoListReducer, []);\r\n  const [activedList, setActivedList] = useState<ITodoItem[]>([]);\r\n  const [completedList, setCompletedList] = useState<ITodoItem[]>([]);\r\n  const [completedNum, setCompletedNum] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const acti = todoList.filter(item => !item.completed);\r\n    setActivedList(acti);\r\n    const compNum = todoList.length - acti.length;\r\n    setCompletedNum(compNum);\r\n  }, [todoList]);\r\n\r\n  useEffect(() => {\r\n    if (completedList.length !== completedNum) {\r\n      setCompletedList(todoList.filter(item => item.completed));\r\n    }\r\n  }, [todoList, completedList, completedNum]);\r\n\r\n  const onAdd = useCallback((todoItem: ITodoItem) => {\r\n    todoListDispatch({ type: 'add', val: [todoItem] });\r\n  }, []);\r\n\r\n  const onCompletedChange = useCallback((element: ITodoItem) => {\r\n    todoListDispatch({ type: 'change', val: [element] });\r\n  }, []);\r\n\r\n  const onDelete = useCallback((elementList: ITodoItem[]) => {\r\n    todoListDispatch({type: 'delete', val: elementList});\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <Nav onAdd={onAdd} />\r\n      {(!activedList.length && !completedList.length) ? <Empty /> : ''}\r\n      {activedList.length ? <TodoList activedList={activedList as ITodoItem[]} reverse onCompleted={onCompletedChange} /> : ''}\r\n      {completedList.length ? <CompletedList completedList={completedList as ITodoItem[]} onActived={onCompletedChange} onDelete={onDelete} /> : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Todo;","import {FC, ReactElement} from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\n\nconst App: FC = (): ReactElement => {\n  return (\n    <div className=\"app\">\n      <Todo />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}