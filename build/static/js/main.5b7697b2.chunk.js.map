{"version":3,"sources":["components/Todo/Nav/index.tsx","components/Todo/TodoList/index.tsx","components/Todo/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","onAdd","inputRef","useRef","onAddBtnClicked","useCallback","val","current","value","trim","length","todoItem","key","Date","now","content","completed","onKeyDown","e","keyCode","className","type","placeholder","ref","onClick","TodoList","list","onChange","title","reverse","onDelete","slice","onClear","event","index","Number","currentTarget","dataset","Boolean","map","item","i","defaultChecked","todoListReducer","state","action","findIndex","target","indexs","itemToDel","push","newState","includes","Todo","activedTitle","completedTitle","emptyContent","useReducer","todoList","todoListDispatch","useState","activedList","setActivedList","completedList","setCompletedList","completedNum","setCompletedNum","useEffect","acti","filter","compNum","onCompletedChange","element","elementList","emptyElement","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b7697b2.chunk.js","sourcesContent":["import { FC, ReactElement, useCallback, useRef } from 'react';\r\nimport { ITodoItem } from '../typings';\r\nimport './index.css';\r\n\r\n\r\ninterface IProps {\r\n    onAdd: (todoItem: ITodoItem) => void;\r\n}\r\n\r\n\r\nconst Nav: FC<IProps> = ({\r\n    onAdd\r\n}): ReactElement => {\r\n\r\n    const navTitle = 'ToDo List';\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onAddBtnClicked = useCallback(() => {\r\n        const val: string = inputRef.current!.value.trim();\r\n        if (val.length) {\r\n            const todoItem: ITodoItem = {\r\n                key: Date.now(),\r\n                content: val,\r\n                completed: false\r\n            };\r\n            onAdd(todoItem);\r\n            inputRef.current!.value = '';\r\n        }\r\n    }, [onAdd]);\r\n\r\n    const onKeyDown = useCallback(e => {\r\n        if (e.keyCode === 13) {\r\n            onAddBtnClicked();\r\n        }\r\n    }, [onAddBtnClicked]);\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <span className=\"nav-title\">{navTitle}</span>\r\n            <input className=\"nav-input\" type=\"text\" placeholder=\"请输入内容...\" ref={inputRef} onKeyDown={onKeyDown} />\r\n            <button className=\"nav-add-btn\" onClick={onAddBtnClicked}></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;","import {FC, useCallback} from 'react';\r\nimport { ITodoItem } from '../typings';\r\nimport './index.css';\r\n\r\ninterface IProps {\r\n    list: ITodoItem[];\r\n    onChange: (element: ITodoItem) => void;\r\n    title?: string;\r\n    reverse?: boolean;\r\n    onDelete?: (elementList: ITodoItem[]) => void;\r\n}\r\n\r\nconst TodoList: FC<IProps> = ({\r\n    list,\r\n    onChange,\r\n    title,\r\n    reverse,\r\n    onDelete,\r\n}) => {\r\n\r\n    if (reverse) list = list.slice().reverse();\r\n\r\n    const onClear = useCallback(() => {\r\n        onDelete!(list);\r\n    }, [onDelete, list]);\r\n    \r\n    const onClick = useCallback(event => {\r\n        const index: number = Number(event.currentTarget.dataset.index);\r\n        onChange(list[index]);\r\n    }, [onChange, list]);\r\n    \r\n    if (!list.length) return null;\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {(Boolean(title) || onDelete) &&\r\n                <div className=\"todo-title\">\r\n                    <span>{title || '未命名标题'}</span>\r\n                    {onDelete && <button className=\"clear-btn\" onClick={onClear}>清空</button>}\r\n                </div>\r\n            }\r\n            {list.map((item, i) => (\r\n                <li className=\"todo-item\" key={item.key} data-index={i} onClick={onClick}>\r\n                    <input type=\"checkbox\" defaultChecked={item.completed} />\r\n                    <span className={`todo-item-text${item.completed ? ' completed' : ''}`}>{item.content}</span>\r\n                </li>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import { FC, ReactElement, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport './index.css';\r\nimport Nav from './Nav';\r\nimport TodoList from './TodoList';\r\nimport { ITodoItem } from './typings';\r\n\r\ninterface IProps {\r\n  activedTitle?: string;\r\n  completedTitle?: string;\r\n  emptyContent?: string;\r\n}\r\n\r\ntype TodoListAction = {\r\n  type: string\r\n  val: ITodoItem[]\r\n};\r\n\r\nconst todoListReducer = (state: ITodoItem[], action: TodoListAction): ITodoItem[] => {\r\n  if (action.type === 'add') {\r\n    return [...state, action.val[0]];\r\n  }\r\n  if (action.type === 'change') {\r\n    const index = state.findIndex(item => item === action.val[0]);\r\n    const target = { ...state[index] };\r\n    target.completed = !target.completed;\r\n    return [...state.slice(0, index), target, ...state.slice(index + 1)];\r\n  }\r\n  if (action.type === 'delete') {\r\n    const indexs = [];\r\n    for (const itemToDel of action.val) {\r\n      const index = state.findIndex(item => item === itemToDel);\r\n      indexs.push(index);\r\n    }\r\n    const newState: ITodoItem[] = [];\r\n    for (let i = 0; i < state.length; i++) {\r\n      if (indexs.includes(i)) continue;\r\n      newState.push(state[i]);\r\n    }\r\n    return newState;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst Todo: FC<IProps> = ({\r\n  activedTitle = '代办',\r\n  completedTitle = '已完成',\r\n  emptyContent = '无'\r\n}): ReactElement => {\r\n\r\n  const [todoList, todoListDispatch] = useReducer(todoListReducer, []);\r\n  const [activedList, setActivedList] = useState<ITodoItem[]>([]);\r\n  const [completedList, setCompletedList] = useState<ITodoItem[]>([]);\r\n  const [completedNum, setCompletedNum] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const acti = todoList.filter(item => !item.completed);\r\n    setActivedList(acti);\r\n    const compNum = todoList.length - acti.length;\r\n    setCompletedNum(compNum);\r\n  }, [todoList]);\r\n\r\n  useEffect(() => {\r\n    if (completedList.length !== completedNum) {\r\n      setCompletedList(todoList.filter(item => item.completed));\r\n    }\r\n  }, [todoList, completedList, completedNum]);\r\n\r\n  const onAdd = useCallback((todoItem: ITodoItem) => {\r\n    todoListDispatch({ type: 'add', val: [todoItem] });\r\n  }, []);\r\n\r\n  const onCompletedChange = useCallback((element: ITodoItem) => {\r\n    todoListDispatch({ type: 'change', val: [element] });\r\n  }, []);\r\n\r\n  const onDelete = useCallback((elementList: ITodoItem[]) => {\r\n    todoListDispatch({type: 'delete', val: elementList});\r\n  }, []);\r\n\r\n  const emptyElement = <div className=\"empty\">{emptyContent}</div>;\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <Nav onAdd={onAdd} />\r\n      {!activedList.length && !completedList.length && emptyElement}\r\n      <TodoList title={activedTitle} list={activedList} reverse onChange={onCompletedChange} />\r\n      <TodoList title={completedTitle} list={completedList} onChange={onCompletedChange} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;","import {FC, ReactElement} from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\n\nconst App: FC = (): ReactElement => {\n  return (\n    <div className=\"app\">\n      <Todo emptyContent=\"什么都没有(●'◡'●)\" />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}