{"version":3,"sources":["utils/common.ts","components/ImageStitcher/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getDate","d","Date","year","getFullYear","toString","month","getMonth","substring","date","getImageDataUrl","blob","Promise","resolve","reject","reader","FileReader","onloadend","event","imgDataUrl","target","result","onerror","err","readAsDataURL","getImageElements","imgDataUrlList","promiseList","map","img","Image","src","onload","all","imgElement2ImageData","imgElement","width","height","ratioW","ratioH","canvas","document","createElement","setAttribute","ctx","getContext","scale","drawImage","getImageData","cropImageData","imageData","top","bottom","data","start","Math","floor","end","ImageData","subarray","cropAndConcatImgDatas","imgElementList","cropRangeList","maxWidth","length","heightList","imgDataList","i","w","h","ratio","imgData","cropedImgData","push","lastY","putImageData","toDataURL","AreaSelector","onSelectorChange","onOrderChange","onDeleteImg","useState","topTouched","setTopTouched","topStartY","setTopStartY","topStartOffset","setTopStartOffset","bottomTouched","setBottomTouched","bottomStartY","setBottomStartY","bottomStartOffset","setBottomStartOffset","topRef","useRef","bottomRef","areaRef","current","clientHeight","onTopBarStart","e","type","pageY","targetTouches","onBottomBarStart","onMove","fn","lock","unLock","requestAnimationFrame","throttle","newTop","style","topPercent","bottomPercent","background","newBottom","useEffect","mouseUpListener","Number","body","querySelector","addEventListener","removeEventListener","className","onMouseMove","onTouchMove","alt","ref","onMouseDown","onTouchStart","onClick","ImageStitcher","inputRef","imageListRef","setImgDataUrlList","setCropRangeList","resultImageRef","resultURL","setResultURL","selectImage","a","fileList","files","list","file","blobUrl","Array","fill","stitchImages","stitchedImgDataUrl","saveImage","MouseEvent","download","href","dispatchEvent","accept","multiple","onChange","click","item","index","splice","orderDelta","maxLen","targetIndex","inputElem","onAddImgClicked","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1371f7c6.chunk.js","sourcesContent":["export const throttle = (fn: CallableFunction) => {\r\n    let lock = false;\r\n    const unLock = () => lock = false;\r\n    return (...args: any[]) => {\r\n        if (lock) return;\r\n        lock = true;\r\n        fn(...args);\r\n        requestAnimationFrame(unLock);\r\n    };\r\n};\r\n\r\nexport const getDate = () => {\r\n    const d = new Date();\r\n    const year = d.getFullYear().toString();\r\n    const month = (d.getMonth() + 101).toString().substring(1);\r\n    const date = (d.getDate() + 100).toString().substring(1);\r\n    return `${year}-${month}-${date}`;\r\n}","import { FC, ReactElement, useEffect, useRef, useState } from 'react';\r\nimport { getDate, throttle } from '../../utils/common';\r\nimport './index.css';\r\n\r\nfunction getImageDataUrl(blob: Blob) {\r\n    return new Promise<string>((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = event => {\r\n            const imgDataUrl = event.target!.result as string;\r\n            resolve(imgDataUrl);\r\n        };\r\n        reader.onerror = err => reject(err);\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}\r\n\r\nfunction getImageElements(imgDataUrlList: string[]) {\r\n    const promiseList = imgDataUrlList.map(imgDataUrl => {\r\n        return new Promise<HTMLImageElement>((resolve, reject) => {\r\n            const img = new Image();\r\n            img.src = imgDataUrl;\r\n            img.onload = () => {\r\n                resolve(img);\r\n            };\r\n        });\r\n    });\r\n    return Promise.all(promiseList);\r\n}\r\n\r\nfunction imgElement2ImageData(imgElement: HTMLImageElement, width: number, height: number) {\r\n    let {width: w, height: h} = imgElement;\r\n    const ratioW = width / w;\r\n    const ratioH = height / h;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.setAttribute('width', width.toString());\r\n    canvas.setAttribute('height', height.toString());\r\n    const ctx = canvas.getContext('2d');\r\n    ctx?.scale(ratioW, ratioH);\r\n    ctx?.drawImage(imgElement, 0, 0);\r\n    return ctx?.getImageData(0, 0, canvas.width, canvas.height)!;\r\n}\r\n\r\nfunction cropImageData(imageData: ImageData, top: number, bottom: number) {\r\n    const { data, width, height } = imageData;\r\n    const start = 4 * width * Math.floor(height * top);\r\n    const end = 4 * width * Math.floor(height * (1 - bottom));\r\n    return new ImageData(data.subarray(start, end), width);\r\n}\r\n\r\nfunction cropAndConcatImgDatas(imgElementList: HTMLImageElement[], cropRangeList: [number, number][], maxWidth: number = 1080) {\r\n    if (imgElementList.length === 0) return '';\r\n\r\n    const width = maxWidth;\r\n    const heightList = [];\r\n    let height = 0;\r\n    const imgDataList: ImageData[] = [];\r\n    for (let i = 0; i < imgElementList.length; ++i) {\r\n        let {width: w, height: h} = imgElementList[i];\r\n        const ratio = width / w;\r\n        h *= ratio;\r\n\r\n        const imgData = imgElement2ImageData(imgElementList[i], width, h);\r\n        const cropedImgData = cropImageData(imgData, ...cropRangeList[i]);\r\n\r\n        height += cropedImgData.height;\r\n        imgDataList.push(cropedImgData);\r\n        heightList.push(cropedImgData.height);\r\n    }\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.setAttribute('width', width.toString());\r\n    canvas.setAttribute('height', height.toString());\r\n    const ctx = canvas.getContext('2d');\r\n    let lastY = 0;\r\n    for(let i = 0; i < imgDataList.length; ++i) {\r\n        ctx?.putImageData(imgDataList[i], 0, lastY);\r\n        lastY += heightList[i];\r\n    }\r\n\r\n    return canvas.toDataURL();\r\n}\r\n\r\nconst ImageStitcher: FC = (): ReactElement => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const imageListRef = useRef<HTMLDivElement>(null);\r\n    const [imgDataUrlList, setImgDataUrlList] = useState<string[]>([]);\r\n    const [cropRangeList, setCropRangeList] = useState<[number, number][]>([]);\r\n    const resultImageRef = useRef<HTMLImageElement>(null);\r\n    const [resultURL, setResultURL] = useState<string>('');\r\n\r\n    const selectImage = async (e: any) => {\r\n        const fileList = e.target.files;\r\n        const list: string[] = [];\r\n        for (let i = 0; i < fileList.length; ++i) {\r\n            const file = fileList[i];\r\n            const blobUrl = await getImageDataUrl(file);\r\n            list.push(blobUrl);\r\n        }\r\n        setResultURL('');\r\n        setImgDataUrlList(list);\r\n        setCropRangeList(new Array(list.length).fill([0, 0]));\r\n    };\r\n\r\n    const stitchImages = async () => {\r\n        const imgElementList: HTMLImageElement[] = await getImageElements(imgDataUrlList);\r\n        const stitchedImgDataUrl = cropAndConcatImgDatas(imgElementList, cropRangeList, 1080);\r\n        setResultURL(stitchedImgDataUrl);\r\n    };\r\n\r\n    const saveImage = async () => {\r\n        const a = document.createElement('a');\r\n        const event = new MouseEvent('click');\r\n        a.download = `长图_${getDate()}`;\r\n        a.href = resultURL;\r\n        a.dispatchEvent(event);\r\n    }\r\n\r\n    const onSelectorChange = (index: number, top: number, bottom: number) => {\r\n        cropRangeList[index] = [top, bottom];\r\n        setCropRangeList([...cropRangeList]);\r\n    };\r\n\r\n    const onDeleteImg = (index: number) => {\r\n        imgDataUrlList.splice(index, 1);\r\n        setImgDataUrlList([...imgDataUrlList]);\r\n        cropRangeList.splice(index, 1);\r\n        setCropRangeList([...cropRangeList]);\r\n    }\r\n\r\n    const onOrderChange = (index: number, orderDelta: number) => {\r\n        const maxLen = imgDataUrlList.length;\r\n        const targetIndex = (index + orderDelta + maxLen) % maxLen;\r\n        [imgDataUrlList[index], imgDataUrlList[targetIndex]] = [imgDataUrlList[targetIndex], imgDataUrlList[index]];\r\n        setImgDataUrlList([...imgDataUrlList]);\r\n    }\r\n\r\n    const onAddImgClicked = (index: number) => {\r\n        const inputElem = document.createElement('input');\r\n        inputElem.setAttribute('type', 'file');\r\n        inputElem.setAttribute('accept', 'image/*');\r\n        inputElem.setAttribute('multiple', 'true');\r\n        inputElem.addEventListener('change', async (e: any) => {\r\n            const fileList = e.target.files;\r\n            const list: string[] = [];\r\n            for (let i = 0; i < fileList.length; ++i) {\r\n                const file = fileList[i];\r\n                const blobUrl = await getImageDataUrl(file);\r\n                list.push(blobUrl);\r\n            }\r\n            imgDataUrlList.splice(index + 1, 0, ...list);\r\n            setImgDataUrlList([...imgDataUrlList]);\r\n            cropRangeList.splice(index + 1, 0, [0, 0]);\r\n            setCropRangeList([...cropRangeList]);\r\n        });\r\n        inputElem.click();\r\n    }\r\n\r\n    const onReset = () => {\r\n        setResultURL('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"image-stitcher\">\r\n            <input ref={inputRef} type=\"file\" accept=\"image/*\" multiple onChange={selectImage} />\r\n            <div className=\"button-group\">\r\n                <button className=\"select-file-btn\" onClick={() => inputRef.current?.click()}>选择图片</button>\r\n                {imgDataUrlList.length > 0 && (\r\n                    <div className=\"stitch-btn-group\">\r\n                        <button className=\"reset-btn\" onClick={onReset}>重置</button>\r\n                        <button className=\"stitch-btn\" onClick={stitchImages}>拼接</button>\r\n                        {resultURL !== '' && (\r\n                            <button className=\"save-btn\" onClick={saveImage}>保存</button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {resultURL === '' && (\r\n                <div className=\"image-list\" ref={imageListRef}>\r\n                    {imgDataUrlList.map((item, i) => (\r\n                        <div className=\"selector-item\" key={`selector-item-${i}`}>\r\n                            <AreaSelector src={item}\r\n                                onSelectorChange={(top, bottom) => onSelectorChange(i, top, bottom)}\r\n                                onDeleteImg={() => onDeleteImg(i)}\r\n                                onOrderChange={(orderDelta) => onOrderChange(i, orderDelta)} />\r\n                            <button className=\"add-img-btn\" onClick={() => onAddImgClicked(i)}></button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {resultURL !== '' && (\r\n                <div className=\"result\">\r\n                    <img className=\"result-image\" ref={resultImageRef} src={resultURL} alt=\"拼接后的图片\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface IAreaSelectorProps {\r\n    src: string;\r\n    onSelectorChange: (top: number, bottom: number) => void;\r\n    onOrderChange: (orderDelta: number) => void;\r\n    onDeleteImg: () => void;\r\n}\r\n\r\nconst AreaSelector: FC<IAreaSelectorProps> = ({\r\n    src,\r\n    onSelectorChange,\r\n    onOrderChange,\r\n    onDeleteImg\r\n}) => {\r\n\r\n    const [topTouched, setTopTouched] = useState<boolean>(false);\r\n    const [topStartY, setTopStartY] = useState<number>(0);\r\n    const [topStartOffset, setTopStartOffset] = useState<number>(0);\r\n\r\n    const [bottomTouched, setBottomTouched] = useState<boolean>(false);\r\n    const [bottomStartY, setBottomStartY] = useState<number>(0)\r\n    const [bottomStartOffset, setBottomStartOffset] = useState<number>(0);\r\n\r\n    const topRef = useRef<HTMLDivElement>(null);\r\n    const bottomRef = useRef<HTMLDivElement>(null);\r\n    const areaRef = useRef<HTMLDivElement>(null);\r\n    const height = areaRef.current?.clientHeight;\r\n\r\n    const onTopBarStart = (e: any) => {\r\n        setTopTouched(true);\r\n        setTopStartY(e.type === 'mousedown' ? e.pageY : e.targetTouches[0].pageY);\r\n    };\r\n\r\n    const onBottomBarStart = (e: any) => {\r\n        setBottomTouched(true);\r\n        setBottomStartY(e.type === 'mousedown' ? e.pageY : e.targetTouches[0].pageY);\r\n    };\r\n\r\n    const onMove = throttle((e: any) => {\r\n        const pageY = e.type === 'mousemove' ? e.pageY : e.targetTouches[0].pageY;\r\n        if (topTouched) {\r\n            const distance = pageY - topStartY;\r\n            let newTop = topStartOffset + distance;\r\n            if (newTop < 0) newTop = 0;\r\n            else if (newTop > height! - bottomStartOffset) newTop = height! - bottomStartOffset;\r\n            topRef.current!.style.top = `${newTop}px`;\r\n            const topPercent = newTop / height!;\r\n            const bottomPercent = 1 - bottomStartOffset / height!;\r\n            areaRef.current!.style.background = `\r\n                linear-gradient(to bottom,\r\n                rgba(0,0,0,0.7) ${topPercent*100}%,\r\n                rgba(0,0,0,0) ${topPercent*100}%,\r\n                rgba(0,0,0,0) ${bottomPercent*100}%,\r\n                rgba(0,0,0,0.7) ${bottomPercent*100}%)`;\r\n        } else if (bottomTouched) {\r\n            const distance = bottomStartY - pageY;\r\n            let newBottom = bottomStartOffset + distance;\r\n            if (newBottom < 0) newBottom = 0;\r\n            else if (newBottom > height! - topStartOffset) newBottom = height! - topStartOffset;\r\n            bottomRef.current!.style.bottom = `${newBottom}px`;\r\n            const topPercent = topStartOffset / height!;\r\n            const bottomPercent = 1 - newBottom / height!;\r\n            areaRef.current!.style.background = `\r\n                linear-gradient(to bottom,\r\n                rgba(0,0,0,0.7) ${topPercent*100}%,\r\n                rgba(0,0,0,0) ${topPercent*100}%,\r\n                rgba(0,0,0,0) ${bottomPercent*100}%,\r\n                rgba(0,0,0,0.7) ${bottomPercent*100}%)`;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const mouseUpListener = () => {\r\n            let top = topRef.current!.style.top;\r\n            top = top.substring(0, top.length - 2);\r\n            setTopStartOffset(Number(top));\r\n\r\n            let bottom = bottomRef.current!.style.bottom;\r\n            bottom = bottom.substring(0, bottom.length - 2);\r\n            setBottomStartOffset(Number(bottom));\r\n            \r\n            if (topTouched || bottomTouched) onSelectorChange(Number(top) / height!, Number(bottom) / height!);\r\n            setTopTouched(false);\r\n            setBottomTouched(false);\r\n        };\r\n        const body = document.querySelector('body');\r\n        body!.addEventListener('mouseup', mouseUpListener);\r\n        body!.addEventListener('touchend', mouseUpListener);\r\n        return () => {\r\n            body!.removeEventListener('mouseup', mouseUpListener);\r\n            body!.removeEventListener('touchend', mouseUpListener);\r\n        };\r\n    }, [height, onSelectorChange, topTouched, bottomTouched]);\r\n\r\n    return (\r\n        <div className=\"area-selector\" onMouseMove={onMove} onTouchMove={onMove}>\r\n            <div className=\"area-item\">\r\n                <img className=\"source-image\" src={src} alt=\"图片\" />\r\n                <div className=\"area-box\" ref={areaRef}>\r\n                    <div className=\"bar top-bar\" ref={topRef} onMouseDown={onTopBarStart} onTouchStart={onTopBarStart}></div>\r\n                    <div className=\"bar bottom-bar\" ref={bottomRef} onMouseDown={onBottomBarStart} onTouchStart={onBottomBarStart}></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"order-btn-group\">\r\n                <button className=\"order-btn up-btn\" onClick={() => onOrderChange(-1)}></button>\r\n                <button className=\"order-btn delete-btn\" onClick={() => onDeleteImg()}></button>\r\n                <button className=\"order-btn down-btn\" onClick={() => onOrderChange(1)}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageStitcher;\r\n","import { FC, ReactElement } from 'react';\nimport './App.css';\nimport ImageStitcher from './components/ImageStitcher';\n\nconst App: FC = (): ReactElement => (\n    <div className=\"app\">\n        <ImageStitcher />\n    </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}